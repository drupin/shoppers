<?php

/**
 * @file
 * Module file for Drupal Commerce Extra panes.
 */

/**
 * Implements hook_menu().
 */
function commerce_extra_panes_menu() {
  $items = array();
  $items['admin/commerce/config/checkout/extra'] = array(
    'title' => 'Checkout extra panes',
    'description' => 'Add extra panes to the checkout form.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_extra_panes_settings_form'),
    'access arguments' => array('administer checkout'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
    'file' => 'includes/commerce_extra_panes.admin.inc',
  );
  $items['admin/commerce/config/checkout/extra/%/delete'] = array(
    'title' => 'Delete checkout extra panes',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_extra_panes_delete_confirm', 5),
    'access arguments' => array('administer checkout'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/commerce_extra_panes.admin.inc',
  );
  $items['admin/commerce/config/checkout/extra/%/change-status'] = array(
    'title' => 'Disable/enable checkout extra panes',
    'page callback' => 'commerce_extra_panes_change_status',
    'page arguments' => array(5),
    'access arguments' => array('administer checkout'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/commerce_extra_panes.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function commerce_extra_panes_theme($existing, $type, $theme, $path) {
  return array(
    'commerce_extra_panes_settings_list' => array(
      'render element' => 'element',
    ),
    'commerce_extra_panes_checkout_form' => array(
      'render element' => 'elements',
      'path' => drupal_get_path('module', 'commerce_extra_panes') . '/theme',
      'template' => 'commerce_extra_panes_checkout_form',
    ),
    'commerce_extra_panes_review' => array(
      'render element' => 'elements',
      'path' => drupal_get_path('module', 'commerce_extra_panes') . '/theme',
      'template' => 'commerce_extra_panes_review',
    ),
  );
}

function theme_commerce_extra_panes_settings_list($element) {
  $variables['header'] = array(
    'title' => array('data' => t('Title')),
    'type' => array('data' => t('Extra pane type')),
    'status' => array('data' => t('Status')),
    'op' => array('data' => t('Operations')),
  );
  $extra_panes = commerce_extra_panes_get_panes();
  foreach ($extra_panes as $extra_pane) {
    $entity = reset(entity_load($extra_pane->extra_type, array($extra_pane->extra_id)));
    $row = array();
    $row[] = array('data' => $entity->title);
    $row[] = array('data' => $extra_pane->extra_type);
    $status = ($extra_pane->status) ? t('Enabled'): t('Disabled');
    $row[] = array('data' => $status);
    $operations = l(($extra_pane->status) ? t('disable'): t('enable'), 'admin/commerce/config/checkout/extra/' . $extra_pane->extra_id . '/change-status') . ' ' . l(t('delete'), 'admin/commerce/config/checkout/extra/' . $extra_pane->extra_id . '/delete');
    $row[] = array('data' => $operations);
    $variables['rows'][] = $row;
  }
  return theme('table', $variables);
}

/**
 * Helper function for getting one pane or all.
 */
function commerce_extra_panes_get_panes($extra_id = NULL) {
  $extra_panes = array();
  $query = db_select('commerce_extra_panes', 'cpe')->fields('cpe', array('extra_id', 'extra_type', 'status'));
  if ($extra_id) {
    $query->condition('extra_id', $extra_id);
  }
  return $query->execute()->fetchAll();
}

/**
 * Implements hook_commerce_checkout_pane_info().
 */
function commerce_extra_panes_commerce_checkout_pane_info() {
  $checkout_panes = array();
  $extra_panes = commerce_extra_panes_get_panes();
  foreach ($extra_panes as $extra_pane) {
    if ($extra_pane->status) {
      $entity = current(entity_load($extra_pane->extra_type, array($extra_pane->extra_id)));
      $checkout_panes['extra_pane__' . $extra_pane->extra_type . '__' . $extra_pane->extra_id] = array(
        'title' => $entity->title,
        'file' => 'includes/commerce_extra_panes.checkout_pane.inc',
        'base' => 'commerce_extra_panes_contents',
      );
    }
  }
  return $checkout_panes;
}

/**
* Implements hook_entity_info_alter().
*/
function commerce_extra_panes_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['checkout_pane'] = array(
    'label' => t('Checkout pane'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements template_preprocess_node().
 */
function commerce_extra_panes_preprocess_node(&$variables) {
  if ($variables['view_mode'] == 'checkout_pane') {
    $variables['title'] = '';
  }
}
